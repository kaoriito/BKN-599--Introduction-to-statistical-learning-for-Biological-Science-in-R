#Fature extraction
data$MPG<-data$MP/data$G;
data$A2TO<-data$AST/data$TOV
#removing null values
data[is.na(data)] <- 0
#Selecting threshold for subsetting
cutoff<-28.5
#subsetting data using MPG
newdata <- subset(data, MPG >=cutoff );
impdata<- newdata[c(9:55)];
# impdata<- newdata[c(8:20,23,26,28,30:33, 36, 39:41, 45, 49:53,55)]; #offense features
# impdata<- newdata[c(21,24,25,27,34,37,38,42,46)]; #defense features
impdata$DRB[impdata$DRB>8 & impdata$DRB<8.2]= 3impdata$TRB[impdata$TRB>9.8 & impdata$TRB<10]= 5
impdata$DRB[impdata$DRB>8 & impdata$DRB<8.2]= 3
impdata$TRB[impdata$TRB>9.8 & impdata$TRB<10]= 5
row.names(impdata) <- newdata$Player
View(impdata)
impdata$DRB%[impdata$DRB%>25.5 & impdata$DRB%<26]= 11
impdata$DRB%[impdata$DRB%>25.5 & impdata$DRB%<26]= 11
impdata$`DRB%`[impdata$DR`DRB%`>25.5 & impdata$`DRB%`<26]= 11
impdata$`DRB%`[impdata$DR`DRB%`>25.5 & impdata$`DRB%`<26]= 11
impdata$`DRB%`[impdata$`DRB%`>25.5 & impdata$`DRB%`<26]= 11
impdata$`TRB%`[impdata$`TRB%`>15.2 & impdata$`TRB%`<15.4]= 7.5
View(impdata)
View(impdata)
res.dist <- get_dist(impdata, stand = TRUE, method = "euclidean")
fviz_dist(res.dist,
gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
fviz_nbclust(impdata, kmeans, method = "wss")
fviz_nbclust(impdata, kmeans, method = "silhouette")
fviz_nbclust(impdata, kmeans, method = "gap_stat")
km.res <- kmeans(impdata,8, nstart = 25)
fviz_cluster(km.res, data =impdata, ellipse = TRUE, ellipse.alpha= 0.1,
palette = "jco",repel = TRUE, ggtheme = theme_minimal(),
main= FALSE, xlab= FALSE, ylab = FALSE)
Clusters=data.frame(sort(km.res$cluster));
# Replacing index with player name (used for plot)
row.names(impdata) <- newdata$Player
# Clarify distance measures
res.dist <- get_dist(impdata, stand = TRUE, method = "euclidean")
fviz_dist(res.dist,
gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
# Determinie optimal clusters through different methods
fviz_nbclust(impdata, kmeans, method = "wss")
fviz_nbclust(impdata, kmeans, method = "silhouette")
fviz_nbclust(impdata, kmeans, method = "gap_stat")
# Kmeans based on best cluster-number
km.res <- kmeans(impdata,8, nstart = 25)
# Visualize in clusters
fviz_cluster(km.res, data =impdata, ellipse = TRUE, ellipse.alpha= 0.1,
palette = "jco",repel = TRUE, ggtheme = theme_minimal(),
main= FALSE, xlab= FALSE, ylab = FALSE)
Clusters=data.frame(sort(km.res$cluster));
res.hc <- hclust(res.dist, method = "ward.D2" )
fviz_dend(res.hc, k = 8, # Cut in 8 groups
cex = 0.5, # label size
horiz= TRUE, rect = TRUE # Add rectangle around groups
)
View(impdata)
View(impdata)
source('C:/Users/nadir/Desktop/Matching/Dose-Matching-R/Matching new.R', echo=TRUE)
rm(list = ls());
cat("\014")
graphics.off()
setwd("C:/Users/nadir/Desktop/Matching/BKN 599 Advanced Data Analysis")
threshold= 27
replace= 1
evalData=read.csv("00042_evalDataset_notext.csv")
patChar= read.csv("PatientCharacteristics_withDose.csv")
names(patChar)[6]<-paste("pid")
evalData= evalData[-c(1:4, 7:203, 205:245, 247:276, 278:366, 369:375)]
patChar= patChar[c(6,9,12,18,19,27,29,30)]
dataMerged= merge(evalData,patChar)
dataMerged$severity= ifelse(dataMerged$severity=="H", 1, 0)
dataMerged$finished_college=ifelse(dataMerged$DEMOedu>4,1,0)
dataMerged$DEMOedu=NULL
dataMerged= merge(evalData,patChar)
summary(dataMerged)
dataVisit1[dataVisit1 == -99] <- NA
dataVisit2[dataVisit2 == -99] <- NA
rm(list = ls());
cat("\014")
graphics.off()
setwd("C:/Users/nadir/Desktop/Matching/BKN 599 Advanced Data Analysis")
threshold= 27
replace= 1
evalData=read.csv("00042_evalDataset_notext.csv")
patChar= read.csv("PatientCharacteristics_withDose.csv")
names(patChar)[6]<-paste("pid")
evalData= evalData[-c(1:4, 7:203, 205:245, 247:276, 278:366, 369:375)]
patChar= patChar[c(6,9,12,18,19,27,29,30)]
dataMerged= merge(evalData,patChar)
dataMerged$severity= ifelse(dataMerged$severity=="H", 1, 0)
dataMerged$finished_college=ifelse(dataMerged$DEMOedu>4,1,0)
dataMerged$DEMOedu=NULL
dataMerged[dataMerged == -99] <- NA
summary(dataMerged)
for (i in 2:ncol(dataMerged)){
dataMerged[c(i)]= as.numeric(unlist(dataMerged[c(i)]))
}
dataVisit1= subset(dataMerged, visitnum==1)
dataVisit2= subset(dataMerged, visitnum==2)
summary(dataVisit1)
temp= data.frame(dataVisit2$pid);
names(temp)[1]<-paste("pid");   #renaming column name to "pid"
dataVisit1= merge(temp,dataVisit1)
rm(temp)
summary(dataVisit1)
evalData=read.csv("00042_evalDataset_notext.csv")
evalData= evalData[-c(1:4, 7:203, 205:245, 247:276, 278:366, 369:376)]
dataMerged= merge(evalData,patChar)
dataMerged$severity= ifelse(dataMerged$severity=="H", 1, 0)
dataMerged$finished_college=ifelse(dataMerged$DEMOedu>4,1,0)
dataMerged$DEMOedu=NULL
dataMerged[dataMerged == -99] <- NA
for (i in 2:ncol(dataMerged)){
dataMerged[c(i)]= as.numeric(unlist(dataMerged[c(i)]))
}
dataVisit1= subset(dataMerged, visitnum==1)
dataVisit2= subset(dataMerged, visitnum==2)
summary(dataVisit1)
summary(dataVisit2)
View(dataVisit2)
sum(is.na(dataVisit2))
dataVisit2[complete.cases(datavisit2[,5]),]
dataVisit2[complete.cases(dataVisit2[,5]),]
sum(is.na(dataVisit2))
dataVisit2= dataVisit2[complete.cases(dataVisit2[,5]),]
sum(is.na(dataVisit2))
summary(dataVisit2)
dataVisit2= dataVisit2[complete.cases(dataVisit2[,5:7]),]
temp= data.frame(dataVisit2$pid);
names(temp)[1]<-paste("pid");   #renaming column name to "pid"
dataVisit1= merge(temp,dataVisit1)
sum(is.na(dataVisit1))
sum(is.na(dataVisit2))
summary(dataVisit1)
dataVisit1= subset(dataMerged, visitnum==1)
dataVisit2= subset(dataMerged, visitnum==2)
dataVisit2= dataVisit2[complete.cases(dataVisit2[,5]),]
temp= data.frame(dataVisit2$pid);
temp= data.frame(dataVisit2$pid);
names(temp)[1]<-paste("pid");   #renaming column name to "pid"
dataVisit1= merge(temp,dataVisit1)
rm(temp)
sum(is.na(dataVisit1))
sum(is.na(dataVisit2))
dataVisit1[is.na(dataVisit1[,i]), i] <- median(dataVisit1[,i], na.rm = TRUE)
for(i in 2:ncol(dataVisit1)){
dataVisit1[is.na(dataVisit1[,i]), i] <- median(dataVisit1[,i], na.rm = TRUE)
}
for(i in 2:ncol(dataVisit2)){
dataVisit2[is.na(dataVisit2[,i]), i] <- median(dataVisit2[,i], na.rm = TRUE)
}
sum(is.na(dataVisit1))
sum(is.na(dataVisit2))
data12= dataVisit1
data12$treat=ifelse(dataVisit1$dose_hours<=threshold, 1, 0)
for(i in 2:(ncol(data12)-1)){
data12[,i] <- (data12[,i]-mean(data12[,i]))/sd(data12[,i])
}
highdose= subset(data12, treat==0)
lowdose= subset(data12, treat==1)
source('C:/Users/nadir/Downloads/homework (1).R', echo=TRUE)
rm(list=ls())
rm(list=ls())
for (i in 1:10){
# generate random x values
x=runif(100,min=-2,max=2)
# calculate y based on function + random noise
randnoise=runif(100,min=-5,max=5)
y=2+(3*x)+randnoise
# calculate B0 and B1 based on those x values
linmod=lm(y~x)
plot(x,y)
values[i,]=coef(linmod)
abline(2,3,lwd=1,col="red")
abline(linmod,lwd=1,col="blue")
}
plot.new
abline(2,3,lwd=1,col="red")
for(i in 1:10){
abline(values[i,1],values[i,2],lwd=1,col="blue")
}
source('C:/Users/nadir/Downloads/homework (1).R', echo=TRUE)
abline(values[i,1],values[i,2],lwd=1,col="blue")
plot(x,y,' ')
abline(2,3,lwd=1,col="red")
for(i in 1:10){
abline(values[i,1],values[i,2],lwd=1,col="blue")
}
source('C:/Users/nadir/Downloads/homework (1).R', echo=TRUE)
plot.new()
abline(2,3,lwd=1,col="red")
for(i in 1:10){
abline(values[i,1],values[i,2],lwd=1,col="blue")
}
source('C:/Users/nadir/Downloads/homework (1).R', echo=TRUE)
for(i in 1:10){
abline(values[i,1],values[i,2],lwd=1,col="blue")
}
plot(x,y)
abline(2,3,lwd=1,col="red")
for(i in 1:10){
abline(values[i,1],values[i,2],lwd=1,col="blue")
}
plot.new()
abline(2,3,lwd=1,col="red")
for(i in 1:10){
abline(values[i,1],values[i,2],lwd=1,col="blue")
}
plot(x,y,type='n')
abline(2,3,lwd=1,col="red")
for(i in 1:10){
abline(values[i,1],values[i,2],lwd=1,col="blue")
}
source('~/Assignments & notes/Year 8- Teaching/BKN 599- Introduction to statistical learning for Biological Science in R/Lecture 2 Lab.R', echo=TRUE)
values=matrix(0,nrow=10,ncol=2)
for (i in 1:10){
# generate random x values
x=runif(100,min=-2,max=2)
# calculate y based on function + random noise
randnoise=runif(100,min=-5,max=5)
y=2+3*x+randnoise
# calculate B0 and B1 based on those x values
linmod=lm(y~x)
plot(x,y)
values[i,]=coef(linmod)
abline(2,3,lwd=1,col="red")
abline(linmod,lwd=1,col="blue")
}
plot(x,y,type='n')
abline(2,3,lwd=1,col="red")
for(i in 1:10){
abline(values[i,1],values[i,2],lwd=1,col="blue")
}
plot(advertising$TV ,advertising$sales)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
advertising= read.csv("Advertising.csv")
lm.fit =lm(sales~TV ,data=advertising )
summary(lm.fit)
plot(advertising$TV ,advertising$sales)
abline(lm.fit,col="red")
x=advertising$TV
y=advertising$sales
Beta0= seq(6,7.5,length=200)
Beta1= seq(0.4,0.6,length=200)
RSS= matrix(0, nrow = 200, ncol = 200)
for (i in 1:200)  {
for (j in 1:200)
{
RSS[i,j]= sum((y- Beta0[i] - (Beta1[j])*x)^2)
}
}
contour(Beta0,Beta1,RSS)
Beta0= seq(5,9,length=200)
Beta1= seq(0.02,0.07,length=200)
RSS= matrix(0, nrow = 200, ncol = 200)
for (i in 1:200)  {
for (j in 1:200)
{
RSS[i,j]= sum((y- Beta0[i] - (Beta1[j])*x)^2)
}
}
contour(Beta0,Beta1,RSS)
for (i in 1:200)  {
for (j in 1:200)
{
RSS[201-j,i]= sum((y- Beta0[i] - (Beta1[j])*x)^2)
}
}
contour(Beta0,Beta1,RSS)
image(Beta0,Beta1,RSS)
persp(Beta1,Beta0,RSS)
?contour
?contour
View(RSS)
View(RSS)
contour(Beta0,Beta1,RSS)
persp(Beta1,Beta0,RSS)
persp(Beta1,Beta0,RSS)
image(Beta0,Beta1,RSS)
contour(Beta0,Beta1,RSS)
?plot
lm.fit =lm(medv∼lstat+age ,data=Boston )
summary (lm.fit)
lm.fit =lm(medv∼.,data=Boston )
summary (lm.fit)
?VIF
summary(lm.fit)$r.sq
summary(lm.fit)$sigma
lm.fit1=lm(medv∼.-age ,data=Boston )
summary (lm.fit1)
summary (lm(medv∼lstat *age ,data=Boston ))
lm.fit =lm(medv∼lstat:age ,data=Boston )
summary (lm.fit)
lm.fit =lm(medv∼lstat*age ,data=Boston )
summary (lm.fit)
lm.fit2=lm(medv∼lstat +I(lstat ^2))
summary (lm.fit2)
> summary (lm.fit)
?I()
summary (lm.fit2)
lm.fit2=lm(medv∼lstat +I(lstat ^2))   #I() inhibits conversion of variable to a different type
summary (lm.fit2)
lm.fit =lm(medv∼lstat)
anova(lm.fit ,lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
plot(lm.fit2)
plot(lm.fit)
plot(lm.fit2)
lm.fit5=lm(medv∼poly(lstat ,5))
summary (lm.fit5)
lm.fit5=lm(medv∼poly(lstat ,1))
summary (lm.fit5)
lm.fit5=lm(medv∼poly(lstat ,2))
summary (lm.fit5)
lm.fit5=lm(medv∼poly(lstat ,5))
summary (lm.fit5)
summary (lm(medv∼log(rm),data=Boston ))
summary (lm(medv∼log(rm),data=Boston ))
lm.fit =lm(medv~lstat+age ,data=Boston )
summary (lm.fit)
library(ISLR)
library(ISLR)
rm(list = ls());
rm(list = ls());
cat("\014")
graphics.off()
fix(carseats)
fix(Carseats)
fix(Carseats)
open(Carseats)
(Carseats)
Carseats
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
summary (lm.fit)
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
summary (lm.fit)
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
library(ISLR)
Carseats
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
View(Carseats)
View(Carseats)
rm(list = ls());
library(ISLR)
Carseats
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
summary (lm.fit)
Carseats
fix(Carseats)
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
summary (lm.fit)
contrast(Carseats$ShelveLoc)
contrasts(Carseats$ShelveLoc)
rm(list = ls());
cat("\014")
graphics.off()
Auto
pairs(Auto)
cor(Auto)
fix(Auto)
cor(Auto[2:])
cor(Auto[-c("Name")])
cor(Auto[-c("name")])
cor(Auto[-c(9)])
Autowoname= Auto[-c(9)]
cor(Autowoname)
lm.fit=lm(mpg~.-name ,data=Auto )
summary (lm.fit)
View(Auto)
rm(list = ls());
cat("\014")
graphics.off()
library(ISLR)
lm.fit =lm(mpg~horsepower ,data=Auto )
summary(lm.fit)
attach(Auto)
auto
Auto
lm.fit =lm(mpg~horsepower ,data=Auto )
summary(lm.fit)
summary(lm.fit)
rm(list = ls());
cat("\014")
graphics.off()
pairs(Auto)
Autowoname= Auto[-c(9)]
lm.fit=lm(mpg~.-name ,data=Auto )
summary (lm.fit)
par(mfrow=c(2,2))
plot(lm.fit)
cor(Autowoname)
lm.fit =lm(medv~lstat:age ,data=Boston )
summary (lm.fit)
lm.fit =lm(medv~lstat*age ,data=Boston )
summary (lm.fit)
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
summary (lm.fit)
View(Autowoname)
lm.fit1=lm(mpg~.-name + mpg:cylinders ,data=Auto )
summary(lm.fit1)
fix(Carseats)
lm.fit=lm(Sales~ Price+Urban+US ,data=Auto )
summary (lm.fit)
lm.fit=lm(Sales~ Price+Urban+US ,data=Auto )
lm.fit=lm(sales~ Price+Urban+US ,data=Auto )
rm(list = ls());
cat("\014")
graphics.off()
lm.fit=lm(Sales~ Price+Urban+US ,data=Auto )
lm.fit=lm(Sales~ Price+Urban+US ,data=Carseats )
summary (lm.fit)
lm.fit=lm(Sales~ Price+US ,data=Carseats )
summary (lm.fit)
lm.fit=lm(Sales~ Price+Urban+US ,data=Carseats )
summary (lm.fit)
lm.fit=lm(Sales~ Price+US ,data=Carseats )
summary (lm.fit)
lm.fit1=lm(mpg~.-name + mpg:cylinders ,data=Auto )
summary(lm.fit1)
lm.fit=lm(Sales~ Price+Urban+US ,data=Carseats )
summary (lm.fit)
summary (lm.fit)
lm.fit=lm(Sales~ Price+US ,data=Carseats )
summary (lm.fit)
lm.fit =lm(medv~lstat:age ,data=Boston )
summary (lm.fit)
lm.fit =lm(medv~lstat*age ,data=Boston )
summary (lm.fit)
rm(list = ls());
cat("\014")
graphics.off()
lm.fit =lm(medv~lstat+age ,data=Boston )
summary (lm.fit)
fix(Boston)
lm.fit =lm(medv~.,data=Boston )
summary (lm.fit)
summary(lm.fit)$r.sq
summary(lm.fit)$sigma
lm.fit1=lm(medv~.-age ,data=Boston )
summary (lm.fit1)
lm.fit1=update (lm.fit , ~.-age)
?Boston
lm.fit =lm(medv~lstat:age ,data=Boston )
summary (lm.fit)
lm.fit =lm(medv~lstat*age ,data=Boston )
summary (lm.fit)
lm.fit =lm(medv~lstat:age ,data=Boston )
summary (lm.fit)
lm.fit =lm(medv~.+ lstat:age ,data=Boston )
lm.fit =lm(medv~ lsat+age+ lstat:age ,data=Boston )
summary (lm.fit)
lm.fit =lm(medv~ lstat+age+ lstat:age ,data=Boston )
summary (lm.fit)
lm.fit =lm(medv~lstat*age ,data=Boston )
summary (lm.fit)
lm.fit2=lm(medv~lstat +I(lstat ^2))   #I() inhibits conversion of variable to a different type
summary (lm.fit2)
plot(lstat,medv, Boston)
plot(lstat,medv)
summary (lm.fit2)
lm.fit =lm(medv~lstat)
?anova
anova(lm.fit ,lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit)
plot(lm.fit)
plot(lm.fit)
plot(lm.fit2)
plot(lm.fit)
plot(lm.fit2)
plot(lstat,medv)
plot(lm.fit)
plot(lm.fit2)
par(mfrow=c(2,2))
lm.fit =lm(medv~lstat)
lm.fit2=lm(medv~lstat +I(lstat ^2))   #I() inhibits conversion of variable to a different type
plot(lm.fit)
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat ,5))
summary (lm.fit5)
library(ISLR)
fix(Carseats)
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
summary (lm.fit)
anova
?Carseats
contrasts(Carseats$ShelveLoc)
contrasts(Carseats$ShelveLoc)
?contrasts
Carseats$ShelveLoc <- relevel(Carseats$ShelveLoc, ref = "Medium")
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
summary (lm.fit)
lm.fit =lm(Sales~.+ Income :Advertising +Price :Age ,data=Carseats )
summary (lm.fit)
lm.fit2= lm(Sales~ShelveLoc)
summary(lm.fit2)
lm.fit2= lm(Sales~ShelveLoc)
lm.fit2= lm(Sales~ShelveLoc, Carseats)
summary(lm.fit2)
?aov
aov(Sales~ShelveLoc, Carseats)
x=aov(Sales~ShelveLoc, Carseats)
summary(x)
lm.fit2= lm(Sales~ShelveLoc, Carseats)
summary(lm.fit2)
plot(x)
plot(x)
